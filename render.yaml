# Render.com Blueprint for SafeAPI-Bridge
# This file automates deployment of the proxy server with PostgreSQL and optional Redis

services:
  # Web Service - Node.js Server
  - type: web
    name: safeapi-bridge
    env: node
    region: oregon # or any other region
    plan: starter # Free tier
    buildCommand: npm install && npx prisma generate && npx prisma db push
    startCommand: npm start
    healthCheckPath: /health

    # Auto-deploy on push to main
    branch: main

    # Environment variables
    envVars:
      - key: NODE_ENV
        value: production

      - key: PORT
        value: 10000 # Render default

      - key: JWT_SECRET
        generateValue: true # Auto-generate secure secret

      - key: ADMIN_API_KEY
        generateValue: true # Auto-generate admin key

      - key: DATABASE_URL
        value: "file:./dev.db"

      # Use Redis internal URL from Redis service below (if present)
      - key: REDIS_URL
        fromService:
          name: safeapi-redis
          type: keyvalue
          property: connectionString

      # API Keys (add these manually in Render dashboard or via sync)
      - key: OPENAI_API_KEY
        sync: false

      - key: GEMINI_API_KEY
        sync: false

      - key: CLAUDE_API_KEY
        sync: false

      - key: GROQ_API_KEY
        sync: false

      - key: MISTRAL_API_KEY
        sync: false

      # CORS
      - key: ALLOWED_ORIGINS
        value: "" # No web origins allowed by default; set your domain(s) if needed

      # Allow native mobile (no Origin header)
      - key: ALLOW_MOBILE_NO_ORIGIN
        value: true


      # Rate Limiting
      - key: RATE_LIMIT_MAX_REQUESTS
        value: 100

      - key: RATE_LIMIT_WINDOW_MS
        value: 3600000

  # Key Value (Redis-compatible) Service
  - type: keyvalue
    name: safeapi-redis
    plan: starter # Free tier (30 days)
    region: oregon
    maxmemoryPolicy: allkeys-lru
    ipAllowList: # Required for Key Value instances
      - source: 0.0.0.0/0
        description: everywhere

# Removed external Postgres; using SQLite file DB
